#!/usr/bin/env ruby
#####################################################################################
# Required Gems:
require 'optparse'
require 'ftpd'

#####################################################################################
# Script switches section
$options = {}

ARGV << '-h' if ARGV.empty?

OptionParser.accept(Pathname) do |pn|
  begin
    Pathname.new(pn) if pn
    # code to verify existence
  rescue ArgumentError
    raise OptionParser::InvalidArgument, s
  end
end
 
optparse = OptionParser.new do|opts|
  # Set a banner, displayed at the top
  # of the help screen.
  opts.banner = "Usage: inqServices.rb"

   # Define the $options, and what they do
  $options[:directory] = false
   opts.on( '-d', '--dir <FILE>',Pathname, 'Specify the directory to save all output' ) do|file|
     $options[:directory] = File.absolute_path(file)
   end
 
# This displays the help screen, all programs are assumed to have this option.
  opts.on( '-h', '--help', 'Display this screen' ) do
    puts "ftp.rb, the ruby based ftp server!"
    puts
    puts opts
    puts
    exit
  end 
end.parse!

#####################################################################################

username = "magic"
password = "iamharrypotter"

class Driver
  def initialize(temp_dir)
    @temp_dir = temp_dir
  end
  def authenticate(username, password)
     true
  end
  def file_system(user)
    Ftpd::DiskFileSystem.new(@temp_dir)
  end
end

driver = Driver.new($options[:directory])
server = Ftpd::FtpServer.new(driver)
server.log = Logger.new($stdout)
server.interface = "0.0.0.0"
server.port = "21"
server.start
puts "#################################################################"
puts "[+] Server listening on port #{server.bound_port}, sharing [#{$options[:directory]}]"
gets

